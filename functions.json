{
    "peak-intensity" : {
        "name" : "(Lasers) Peak intensity (Gaussian)",
        "regime" : "calc",
        "description" : "Calculates the peak intensity of a laser pulse with an assumption of a Gaussian laser pulse shape and a Gaussian laser beam. The beam diameter follows the D4s definition. The pulse duration is at FWHM.",
        "function" : "2*I[0]*2/(np.pi*(I[1]/2)**2)/I[2]*np.sqrt(np.log(2)/np.pi)",
        "inputs": {
            "Energy" : {
                "position" : 0,
                "units" : [
                    "J",
                    "mJ",
                    "uJ"
                ]
            },
            "Beam diameter" : {
                "position" : 1,
                "units" : [
                    "mm",
                    "um"
                ]
            },
            "Pulse duration" : {
                "position" : 2,
                "units" : [
                    "ns",
                    "ps",
                    "fs"
                ]
            }
        },
        "outputs" : {
            "name" : "Intensity",
            "units" : [
                "MW/cm^2",
                "GW/cm^2",
                "TW/cm^2"
            ]
        }
    },
    "snell-law" : {
        "name" : "(Optics) Snell's law",
        "regime" : "calc",
        "description" : "Based on indexes of refraction and an external angle of incidence, calculates the angle of refraction (internal angle).",
        "function" : "np.arcsin(I[0]/I[1]*np.sin(I[2].to('rad')))",
        "inputs" : {
            "n1" : {
                "position" : 0,
                "units" : [
                ]
            },
            "n2" : {
                "position" : 1,
                "units" : [
                ]
            },
            "theta1" : {
                "position" : 2,
                "units" : [
                    "deg",
                    "rad"
                ]
            }
        },
        "outputs" : {
            "name" : "theta2",
            "units" : [
                "deg",
                "rad"
            ]
        }
    },
    "wavelength-matching" : {
        "name" : "(Optics) Wavelength matching",
        "regime" : "solve",
        "description" : "Solves wavelenghts in frequency matching.",
        "function" : "sympy.Eq(1/I[0], 1/I[1] + 1/I[2])",
        "variables" : {
            "a" : {
                "name" : "l3",
                "position" : 0,
                "units" : [
                    "um",
                    "nm"
                ]
            },
            "b" : {
                "name" : "l1",
                "position" : 1,
                "units" : [
                    "um",
                    "nm"
                ]
            },
            "c" : {
                "name" : "l2",
                "position" : 2,
                "units" : [
                    "um",
                    "nm"
                ]
            }           
        }
    },
    "beam-divergence" : {
        "name" : "(Lasers) Beam divergence and quality",
        "regime" : "solve",
        "description" : "Solves the equation for the divergence of the laser beam.",
        "function" : "sympy.Eq(I[0], I[1] * I[2]/(np.pi*I[3]))",
        "variables" : {
            "a" : {
                "name" : "Divergence",
                "position" : 0,
                "units" : [
                    "deg",
                    "mrad",
                    "urad"
                ]
            },
            "b" : {
                "name" : "M2",
                "position" : 1,
                "units" : [
                ]
            },
            "c" : {
                "name" : "Wavelength",
                "position" : 2,
                "units" : [
                    "um",
                    "nm"
                ]
            },
            "d" : {
                "name" : "Diameter",
                "position" : 3,
                "units" : [
                    "mm",
                    "um"
                ]
            }              
        }
    },
    "b-integral" : {
        "name" : "(Nonlinear) Simplified B-integral",
        "regime" : "calc",
        "description" : "Calculates the simplified B-integral.",
        "function" : "2*np.pi/I[0]*I[1]*I[2]*I[3]",
        "inputs": {
            "Wavelength" : {
                "position" : 0,
                "units" : [
                    "um",
                    "nm"
                ]
            },
            "n2" : {
                "position" : 1,
                "units" : [
                    "m^2/W"
                ]
            },
            "Peak intensity" : {
                "position" : 2,
                "units" : [
                    "MW/cm^2",
                    "GW/cm^2",
                    "TW/cm^2"
                ]
            },
            "Length" : {
                "position" : 3,
                "units" : [
                    "um",
                    "mm",
                    "cm",
                    "m"
                ]
            }
        },
        "outputs" : {
            "name" : "B-integral",
            "units" : [
                "rad"
            ]
        },
        "constants" : [
            "n2"
        ]
    },
    "self-focusing" : {
        "name" : "(Nonlinear) Self-focusing",
        "regime" : "calc",
        "description" : "Calculates the critical power for self-focusing of a Gaussian beam.",
        "function" : "0.1509*I[0]**2/I[1]/I[2]",
        "inputs": {
            "Wavelength" : {
                "position" : 0,
                "units" : [
                    "um",
                    "nm"
                ]
            },
            "n" : {
                "position" : 1,
                "units" : [
                ]
            },
            "n2" : {
                "position" : 2,
                "units" : [
                    "m^2/W"
                ]
            }
        },
        "outputs" : {
            "name" : "Critical power",
            "units" : [
                "MW",
                "GW",
                "TW"
            ]
        },
        "constants" : [
            "n2"
        ]
    },
    "power-energy-duration" : {
        "name" : "(Lasers) Peak power-energy-duration relation",
        "regime" : "solve",
        "description" : "Solves the power-energy-duration relation.",
        "function" : "sympy.Eq(I[0], I[1] / I[2])",
        "variables" : {
            "a" : {
                "name" : "Power",
                "position" : 0,
                "units" : [
                    "TW",
                    "GW",
                    "MW",
                    "kW",
                    "W"
                ]
            },
            "b" : {
                "name" : "Energy",
                "position" : 1,
                "units" : [
                    "J",
                    "mJ",
                    "uJ",
                    "nJ"
                ]
            },
            "c" : {
                "name" : "Duration",
                "position" : 2,
                "units" : [
                    "ns",
                    "ps",
                    "fs"
                ]
            }           
        }
    },
    "power-energy-frequency" : {
        "name" : "(Lasers) Average power-energy-frequency relation",
        "regime" : "solve",
        "description" : "Solves the power-energy-frequency relation.",
        "function" : "sympy.Eq(I[0], I[1] * I[2])",
        "variables" : {
            "a" : {
                "name" : "Power",
                "position" : 0,
                "units" : [
                    "kW",
                    "W",
                    "mW"
                ]
            },
            "b" : {
                "name" : "Energy",
                "position" : 1,
                "units" : [
                    "J",
                    "mJ",
                    "uJ",
                    "nJ"
                ]
            },
            "c" : {
                "name" : "Frequency",
                "position" : 2,
                "units" : [
                    "MHz",
                    "kHz",
                    "Hz"
                ]
            }           
        }
    },
    "duration-bandwidth" : {
        "name" : "(Lasers) Pulse length-bandwidth",
        "regime" : "solve",
        "description" : "Solves the minimal pulse duration based on a spectral bandwidth.",
        "function" : "sympy.Eq(I[3],I[2]*I[0]**2/(I[1]*I[4]))",
        "variables": {
            "a" : {
                "name" : "Wavelength",
                "position" : 0,
                "units" : [
                    "um",
                    "nm"
                ]
            },
            "b" : {
                "name" : "Bandwidth",
                "position" : 1,
                "units" : [
                    "um",
                    "nm"
                ]
            },
            "c" : {
                "name" : "TBP",
                "position" : 2,
                "units" : [
                ]
            },
            "d" : {
                "name" : "Pulse duration",
                "position" : 3,
                "units" : [
                    "ns",
                    "ps",
                    "fs"
                ]
            },
            "e" : {
                "name" : "c",
                "position" : 2,
                "units" : [
                    "m/s"
                ],
                "value" : 299792458
            }  
        },
        "constants" : [
            "TBP"
        ]
    },
    "peak-fluence" : {
        "name" : "(Lasers) Peak fluence (Gaussian)",
        "regime" : "calc",
        "description" : "Calculates the peak fluence of  a Gaussian laser beam. The beam diameter follows the D4s definition.",
        "function" : "2*I[0]/(np.pi*(I[1]/2)**2)",
        "inputs": {
            "Energy" : {
                "position" : 0,
                "units" : [
                    "J",
                    "mJ",
                    "uJ"
                ]
            },
            "Beam diameter" : {
                "position" : 1,
                "units" : [
                    "mm",
                    "um"
                ]
            }
        },
        "outputs" : {
            "name" : "Fluence",
            "units" : [
                "J/cm^2",
                "mJ/cm^2",
                "uJ/cm^2"
            ]
        }
    },
    "spot-size" : {
        "name" : "(Optics) Spot size",
        "regime" : "calc",
        "description" : "Calculates the spot diameter of a collimated Gaussian beam focused by a lens. Both diameters are by D4s definition.",
        "function" : "4*I[1]*I[0]*I[2]/(np.pi*I[3])",
        "inputs": {
            "Wavelength" : {
                "position" : 0,
                "units" : [
                    "um",
                    "nm"
                ]
            },
            "Beam quality" : {
                "position" : 1,
                "units" : [
                ]
            },
            "Focal length" : {
                "position" : 2,
                "units" : [
                    "mm",
                    "cm"
                ]
            },
            "Dia at lens" : {
                "position" : 3,
                "units" : [
                    "um",
                    "mm"
                ]
            }
        },
        "outputs" : {
            "name" : "Spot size",
            "units" : [
                "um",
                "mm"
            ]
        }
    },
    "wavelength-frequency" : {
        "name" : "(Lasers) Wavelength-frequency conversion",
        "regime" : "solve",
        "description" : "Converts between the wavelength and frequency.",
        "function" : "sympy.Eq(I[0], I[2] / I[1])",
        "variables" : {
            "a" : {
                "name" : "Wavelength",
                "position" : 0,
                "units" : [
                    "um",
                    "nm"
                ]
            },
            "b" : {
                "name" : "Frequency",
                "position" : 1,
                "units" : [
                    "THz",
                    "GHz",
                    "MHz"
                ]
            },
            "c" : {
                "name" : "c",
                "position" : 2,
                "units" : [
                    "m/s"
                ],
                "value" : 299792458
            }           
        }
    }
}